{"version":3,"sources":["components/recipe.module.css","components/recipe.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Recipe","title","image","calorie","load","ingredients","className","style","recipe","container","onClick","console","log","id","img","src","alt","foodname","map","ingredient","index","text","color","type","rotate","loader","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","undefined","setLoad","useEffect","getRecipes","a","fetch","response","json","data","hits","onSubmit","e","preventDefault","onChange","target","value","label","calories","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qJACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,IAAM,oBAAoB,SAAW,yBAAyB,UAAY,0BAA0B,QAAU,wBAAwB,OAAS,uBAAuB,YAAc,8B,gKCkCvNC,EA/BA,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,QAAQC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,YAK1C,OAEI,qBAAKC,UAAWC,IAAMC,OAAtB,SACI,qBAAKF,UAAWC,IAAME,UAAtB,SACML,EAME,gCACI,qBAAKM,QAfF,WACnBC,QAAQC,IAAI,oCAckCC,GAAIN,IAAMO,IAAKC,IAAKb,EAAOc,IAAI,YAC7D,qBAAIV,UAAYC,IAAMU,SAAtB,eAAmChB,KACnC,oBAAGK,UAAWC,IAAMJ,QAApB,qBAAsCA,KACtC,oBAAIU,GAAKN,IAAMF,YAAf,SACKA,EAAYa,KAAI,SAACC,EAAWC,GAAZ,OACb,6BAAiBD,EAAWE,MAAnBD,WAXrB,eAAC,IAAD,CAAQE,MAAM,YAAYC,KAAK,OAAOC,OAAQ,EAAGlB,UAAYC,IAAMkB,OAAnE,UACI,qBAAKZ,GAAIN,IAAMO,IAAKC,IAAKb,EAAOc,IAAI,KACpC,qBAAIV,UAAYC,IAAMU,SAAtB,eAAmChB,KACnC,oBAAGK,UAAWC,IAAMJ,QAApB,qBAAsCA,aC2C/CuB,EAvDH,WAEV,IAFgB,EAKcC,mBAAS,IALvB,mBAKTC,EALS,KAKAC,EALA,OAMYF,mBAAS,IANrB,mBAMTG,EANS,KAMDC,EANC,OAOUJ,mBAAS,IAPnB,mBAOTK,EAPS,KAOFC,EAPE,OAQON,wBAASO,GARhB,mBAQT9B,EARS,KAQJ+B,EARI,KAUhBC,qBAAU,WAERC,IACAF,GAAQ,KAEP,CAACH,IAGJ,IAAMK,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCP,EAApC,mBAjBf,WAiBe,oBAhBf,mCAgBe,sDADX,cACXQ,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjB/B,QAAQC,IAAI8B,GACZP,GAAQ,GAGRN,EAAWa,EAAKC,MAPC,2CAAH,qDAoBhB,OACE,sBAAKrC,UAAU,MAAf,UACE,oBAAIA,UAAU,UAAd,wBACA,uCACA,uBAAMsC,SAXQ,SAAAC,GAEhBZ,EAASH,GACTe,EAAEC,kBAQ6BxC,UAAW,cAAxC,UACE,uBAAOA,UAAW,eAAciB,KAAK,OAAOwB,SAhB9B,SAACF,GACnBd,EAAUc,EAAEG,OAAOC,UAgBf,wBAAS3C,UAAW,gBAAeiB,KAAM,SAAzC,uBAEF,qBAAKjB,UAAW,iBAAhB,SACGsB,EAAQV,KAAI,SAAAV,GAAM,OACjB,cAAC,EAAD,CAAQH,YAAeG,EAAOA,OAAOH,YAAaD,KAAMA,EAAM+B,QAASA,EAAQjC,MAAOM,EAAOA,OAAON,MAAOD,MAAOO,EAAOA,OAAO0C,MAAO/C,QAAUK,EAAOA,OAAO2C,oBCzC1JC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.be9b30c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__gxL4K\",\"img\":\"recipe_img__2jbNH\",\"foodname\":\"recipe_foodname__3-ebN\",\"container\":\"recipe_container__2CQPO\",\"calorie\":\"recipe_calorie__1Wmmt\",\"loader\":\"recipe_loader__3p6Ik\",\"ingredients\":\"recipe_ingredients__uzLOs\"};","import React,{useEffect, useState} from 'react'\r\nimport style from './recipe.module.css'\r\nimport Loader from 'react-loader-spinner'\r\n\r\nconst Recipe = ({ title, image, calorie,load ,ingredients}) => {\r\n    const getIngredients = () => {\r\n        console.log(\"ingredieints are here my firend\");\r\n        \r\n    }\r\n    return (\r\n        \r\n        <div className={style.recipe}>\r\n            <div className={style.container}>\r\n                {!load ?\r\n                    <Loader color=\"lightgrey\" type=\"Bars\" rotate={1 }className ={style.loader}>\r\n                        <img id={style.img} src={image} alt=\"\" /> \r\n                        <h1 className={ style.foodname}>  {title}</h1>\r\n                        <p className={style.calorie}>Calorie:{calorie}</p>\r\n                    </Loader> :\r\n                    <div>\r\n                        <img onClick={getIngredients} id={style.img} src={image} alt=\"loading\" />\r\n                        <h1 className={ style.foodname}>  {title}</h1>\r\n                        <p className={style.calorie}>Calorie:{calorie}</p>\r\n                        <ul id ={style.ingredients}>\r\n                            {ingredients.map((ingredient,index) => (\r\n                                <li key={index}>{ingredient.text}</li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipe;","import React, {useState , useEffect} from 'react'\nimport \"./App.css\"\nimport Recipe from './components/recipe'\n\n\nconst App = () => {\n\n  const App_id = \"ee111e4c\"\n  const App_key =\"6599db68907bd051c40cf2b533fb4932\"\n\n  const [recipes, setRecipes] = useState([])\n  const [search, setSearch] = useState(\"\")\n  const [query, setQuery] = useState(\"\")\n  const [load,setLoad] = useState(undefined)\n  \n  useEffect(() => {\n\n    getRecipes()\n    setLoad(false)\n    \n  }, [query])\n\n  \n  const getRecipes = async() => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${App_id}&app_key=${App_key}&from=0&to=3&calories=591-722&health=alcohol-free`)\n    const data = await response.json()\n    console.log(data)\n    setLoad(true)\n    \n    \n    setRecipes(data.hits)\n  }\n  const updateInput = (e) => {\n    setSearch(e.target.value)\n  }\n\n  const getSearch = e => {\n    \n    setQuery(search)\n    e.preventDefault()\n    \n    \n  }\n  return (\n    <div className=\"App\">\n      <h1 className=\"heading\">Cook it!!!</h1>\n      <h4>anish</h4>\n      <form onSubmit ={getSearch } className =\"search-form\">\n        <input className =\"search-input\"type=\"text\" onChange ={updateInput} />\n        <button  className =\"search-button\"type =\"submit\">search</button>\n      </form>\n      <div className =\"getting-recipe\">\n        {recipes.map(recipe => (\n          <Recipe ingredients = {recipe.recipe.ingredients} load={load} setLoad={setLoad}image={recipe.recipe.image} title={recipe.recipe.label} calorie={ recipe.recipe.calories}/>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}